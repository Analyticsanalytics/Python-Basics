#Check out the directory path
import os
print os.getcwd()

##########################################################
> str1 = 'hello';  str2 = ','  ; str3 = 'world';  str4 = str1 + str3
Indexing examples
str1[1] = "e"  also str1[-1] = "o"
str1 + str2 + str3 = "hello,world"
str3 * 3 = "worldworldworld"
"r" in str3 = True
str3[1:3] = "or"  also str3[:3] = "wor"
str4[1:9:2] = "elwr"  also  str4[::-1] = "dlrowolleh"  also, str[::2] = "hloold"
#Here s[start:End:Step]. Step will take alternative for each step. In above example, we remove every 2nd element.
#####################################################


########## Conditional Assignment    ############################

varA = 9, varB = adieu
Write a piece of Python code that prints out one of the following messages:
"string involved" if either varA or varB are strings
"bigger" if varA is larger than varB
"equal" if varA is equal to varB
"smaller" if varA is smaller than varB
 
 #SOlution
if type(varA) == str or type(varB) == str:
   print"string involved"
elif varA > varB:
   print "bigger"
elif varA == varB:
   print "equal"
elif varA < varB:
   print"smaller"
############################################################

While Loop Examples:
1. Convert the following into code that uses a while loop.
print 2
print 4
print 6
print 8
print 10
print Goodbye!

Solution:
num = 2
while num <= 10:
     print num
     num = num + 2
print "Goodbye!"
#Here basically, while loop 1st of all test the boolean condition n <=10, if it's true then it perform the set of instructions, it
 cycles throught he test multiple times. In case boolean condition is met false, then it skips to the last round of code
2. Convert the following into code that uses a while loop.
print Hello!; print 10; print 8; print 6; print 4; print 2

Solution:
num = 10
print "Hello!"
while num >= 2:
    print num
    num = num -2

# Here is another way to solve this:
num = 11
print "Hello!"
while num > 1:
    num -= 1
    if num %2 == 0:
        print num    
    
3. Write a while loop that sums the values 1 through end, inclusive. end is a variable that we define for you. So, for example, if we 
define end to be 6, your code should print out the result:21 which is 1 + 2 + 3 + 4 + 5 + 6.
Solution:
num=1
total=0
while num <= end:
     total=total + num 
     num = num + 1

print total




